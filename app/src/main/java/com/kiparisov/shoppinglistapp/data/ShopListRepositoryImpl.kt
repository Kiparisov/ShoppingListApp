package com.kiparisov.shoppinglistapp.data

import com.kiparisov.shoppinglistapp.domain.ShopItem
import com.kiparisov.shoppinglistapp.domain.ShopListRepository
import java.lang.RuntimeException

object ShopListRepositoryImpl: ShopListRepository {
    private val shopList = mutableListOf<ShopItem>()
    private var autoGeneratedId: Int = 0

    override fun addShopItem(shopItem: ShopItem) {
        shopItem.id = autoGeneratedId++
        shopList.add(shopItem)
    }

    override fun editShopItem(shopItem: ShopItem) {
        val oldElement = getShopItem(shopItem.id)
        val index = shopList.indexOf(oldElement)
        shopList[index] = shopItem
    }

    override fun getShopItem(id: Int): ShopItem {
        return shopList.find {
            it.id == id
        } ?: throw RuntimeException("Element with id: $id not found")
    }

    override fun getShopList(): List<ShopItem> {
        return shopList.toList()
    }

    override fun deleteShopItem(shopItem: ShopItem) {
        shopList.remove(shopItem)
    }
}